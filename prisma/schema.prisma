// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id 
  email              String     @unique
  name               String?
  recipes            Recipe[]
  favorites          Favorite[]
  following          Follow[]   @relation("UserFollowing")
  followers          Follow[]   @relation("UserFollowers")
  mealPlans          MealPlan[]
  subscriptionStatus String     @default("free")
  comments  Comment[]
  activities Activity[]
}

model Recipe {
  id           String     @id @default(cuid())
  title        String
  ingredients  String[]
  instructions String[]
  cookingTime  Int
  imageUrl     String?
  author       User       @relation(fields: [authorId], references: [id])
  authorId     String
  favorites    Favorite[]
  mealPlans    MealPlan[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  comments Comment[]
  activities Activity[]
}

model Favorite {
  id       String @id @default(cuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId String

  @@unique([userId, recipeId])
}

model Follow {
  id          String @id @default(cuid())
  follower    User   @relation("UserFollowing", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("UserFollowers", fields: [followingId], references: [id])
  followingId String

  @@unique([followerId, followingId])
}

model MealPlan {
  id       String   @id @default(cuid())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  date     DateTime
  recipe   Recipe   @relation(fields: [recipeId], references: [id])
  recipeId String
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String
}

model Activity {
  id        String   @id @default(cuid())
  action    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  String
}
